{"version":3,"sources":["components/dashboard/product/SelectSubCategory.js","pages/dashboard/product/Add.js"],"names":["SelectCategory","props","componentDidMount","init","getCategoryData","category_id","sub_category_id","type","user_token","value","state","name","refillGetSubCategoryViaId","then","res","console","log","message","SERVER_SUCCESS","setState","data","catch","err","initSelectUI","this","handleOnChangeCategory","_id","that","window","$","select2","placeholder","allowClear","ajax","url","getSubCategoriesWithSearch","delay","headers","getAuthoriztionToken","params","search","term","page","page_size","processResults","results","items","length","map","ele","id","pagination","more","hasMore","cache","escapeMarkup","markup","minimumInputLength","templateResult","repo","loading","text","templateSelection","resetCategorySelect","val","trigger","componentDidUpdate","prevProps","addProductReqeustStatus","prevAddProductReqeustStatus","STATUS","SUCCESS","undefined","error_label","label","className","PureComponent","connect","user","product","user_data","USER_KEY","USER_DATA","product_data","PRODUCT_KEY","CATEGORY_KEY","ADD_PRODUCT_REQUEST_STATUS","AddProduct","arrows","updateSystemData","KTUtil","isRTL","leftArrow","rightArrow","datepicker","rtl","todayHighlight","orientation","templates","on","e","Date","date","SYSTEM_DATA_PAGE_TITLE","submit","preventDefault","short_description","long_description","brand","distributor","delivery_time_in_days","retail_price","refill_price","discount","notes","alert","quantity","weight","size","units","average_life_in_days","mfg_date","expiry_date","code","pup_gtin_code","images","image_uploading","image_uploading_count","uploaded_images","updateProductUIConstraints","createProduct","requestBody","Helper","validate","Object","keys","status","response","ADD_PRODUCT_ERRORS","ADD_PRODUCT_IS_UPLOADING_IMAGES","isError","key","errors","findIndex","fieldName","onChangeText","updateAddProductFormData","reqeustStatus","history","prevReqeustStatus","resetProductData","ToastsStore","success","replace","ERROR","MESSAGE","emptyKeys","_emptyKeys","error","Utils","_handleErrorMessage","componentWillUnmount","resetProductState","href","data-ktwizard-state","onSubmit","bind","data-ktwizard-type","onChange","ADD_PRODUCT_FORM_NAME","target","rows","ADD_PRODUCT_FORM_SHORT_DESCRIPTION","ADD_PRODUCT_FORM_LONG_DESCRIPTION","ADD_PRODUCT_FORM_CATEGORY_ID","ADD_PRODUCT_FORM_SUB_CATEGORY_ID","ADD_PRODUCT_FORM_BRAND","ADD_PRODUCT_FORM_DISTRIBUTOR","ADD_PRODUCT_FORM_DELIVERY_TIME_IN_DAYS","ADD_PRODUCT_FORM_RETAIL_PRICE","ADD_PRODUCT_FORM_REFILL_PRICE","ADD_PRODUCT_FORM_DISCOUNT","ADD_PRODUCT_FORM_NOTES","ADD_PRODUCT_FORM_ALERT","ADD_PRODUCT_FORM_QUANTITY","ADD_PRODUCT_FORM_SIZE","ADD_PRODUCT_FORM_WEIGHT","aria-invalid","ADD_PRODUCT_FORM_UNITS","ADD_PRODUCT_FORM_AVERAGE_LIFE_IN_DAYS","handleOnChange","ADD_PRODUCT_FORM_MFG_DATE","calendarOptions","endDate","ADD_PRODUCT_FORM_EXPIRY_DATE","startDate","ADD_PRODUCT_FORM_CODE","ADD_PRODUCT_FORM_PUP_GTIN_CODE","addProductFormData","ADD_PRODUCT_FORM","ADD_PRODUCT_FORM_UPLOADED_IMAGES","ADD_PRODUCT_REQEUST_LOADING","ADD_PRODUCT_IMAGES","ADD_PRODUCT_UPLOAD_TOTAL_IMAGES_COUNT","images_length","uploaded_images_length"],"mappings":"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","file":"static/js/6.3ef31ba4.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport '../category/SelectCategory.css'\nimport { getAuthoriztionToken, getCategoriesWithSearch, getSubCategoriesWithSearch, refillGetSubCategoryViaId } from '../../../apis/APIs'\nimport { connect } from 'react-redux'\nimport { USER_KEY, USER_DATA, SUB_CATEGORY_FORM_CATEGORY_ID, STATUS, SUCCESS, CATEGORY_KEY, SUB_CATEGORY_REQUEST_STATUS, PRODUCT_KEY, ADD_PRODUCT_REQUEST_STATUS, SERVER_SUCCESS } from '../../../redux/Types'\nimport { updateAddProductFormData } from '../../../redux/product/Action'\n\nclass SelectCategory extends PureComponent {\n    static propTypes = {\n        _id: PropTypes.string.isRequired,\n        error_label: PropTypes.any,\n        label: PropTypes.string,\n        handleOnChangeCategory: PropTypes.func,\n        value: PropTypes.object,\n        category_id: PropTypes.string.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: {\n                id: undefined,\n                name: undefined\n            }\n        }\n    }\n\n    componentDidMount = () => {\n        this.init();\n        this.getCategoryData();\n    }\n\n    getCategoryData = () => {\n        const { category_id, sub_category_id, type, user_token } = this.props;\n        const { value } = this.state;\n\n        if (type !== \"edit\" || !user_token || (value && value.name)) return;\n\n        refillGetSubCategoryViaId({\n            user_token,\n            category_id: category_id,\n            sub_category_id\n        })\n            .then((res) => {\n                console.log(\"getCategoryData ===> sub category\", category_id, sub_category_id);\n                if (res.message === SERVER_SUCCESS) {\n                    this.setState({\n                        value: res.data\n                    });\n                    this.init();\n                }\n            })\n            .catch((err) => {\n                this.init();\n            });\n    }\n\n\n    init = () => {\n        this.initSelectUI();\n    }\n\n    initSelectUI = function () {\n        const { user_token, handleOnChangeCategory, _id } = this.props;\n        let that = this;\n\n        if (!window.$) {\n            return;\n        }\n\n        // loading remote data\n        function formatRepo(repo) {\n            if (repo.loading) return repo.text;\n            var markup = \"<div className='select2-result-repository clearfix'>\" +\n                \"<div className='select2-result-repository__meta'>\" +\n                \"<div className='select2-result-repository__title'>\" + repo.name + \"</div>\";\n            return markup;\n        }\n\n        function formatRepoSelection(repo) {\n            const { value } = that.state;\n\n            repo._id && handleOnChangeCategory && handleOnChangeCategory(repo._id);\n            return repo.name || value.name || repo.text;\n        }\n\n        window.$(`#${_id}`).select2({\n            placeholder: \"Search for category\",\n            allowClear: true,\n            ajax: {\n                url: getSubCategoriesWithSearch(),\n                delay: 250,\n                headers: {\n                    \"Authorization\": getAuthoriztionToken()\n                },\n                data: function (params) {\n\n                    return {\n                        search: params.term ? params.term : '', // search term\n                        page: params.page ? params.page : 1,\n                        page_size: 10,\n                        user_token,\n                        category_id: that.props.category_id\n                    };\n                },\n                processResults: function (data, params) {\n                    params.page = params.page || 1;\n\n                    return {\n                        results: data && data.data && data.data.items && data.data.items.length ? data.data.items.map(ele => {\n                            if (ele._id) {\n                                ele.id = ele._id;\n                            }\n\n                            return ele;\n                        }) : [],\n                        pagination: {\n                            more: data && data.data && data.data.hasMore ? data.data.hasMore : false\n                        }\n                    };\n                },\n                cache: true\n            },\n            escapeMarkup: function (markup) {\n                return markup;\n            }, // let our custom formatter work\n            minimumInputLength: 1,\n            templateResult: formatRepo, // omitted for brevity, see the source of this page\n            templateSelection: formatRepoSelection // omitted for brevity, see the source of this page\n        });\n    }\n\n    resetCategorySelect = () => {\n        const { _id } = this.props;\n        window.$(`#${_id}`).val(null).trigger(\"change\");\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const { addProductReqeustStatus, sub_category_id } = this.props;\n\n        const prevAddProductReqeustStatus = prevProps && prevProps.addProductReqeustStatus ? prevProps.addProductReqeustStatus : {};\n        if (addProductReqeustStatus[STATUS] !== prevAddProductReqeustStatus[STATUS]) {\n            switch (addProductReqeustStatus[STATUS]) {\n                case SUCCESS:\n                    this.resetCategorySelect();\n                    break;\n            }\n        }\n    }\n\n    render() {\n        const { error_label, label, _id } = this.props;\n\n        return (\n            <div className=\"form-group row\" >\n                <label className=\"col-form-label col-lg-3 col-sm-12\">{label}</label>\n                <div className=\" col-lg-9 col-md-9 col-sm-12\" id=\"kt_select2_category_list_container\">\n                    <select className=\"form-control kt-select2\" id={_id} name=\"param\">\n                        <option></option>\n                    </select>\n                    {error_label}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapToProps = ({ user, product }) => {\n    const user_data = user && user[USER_KEY] ? user[USER_KEY] : undefined;\n    const user_token = user_data && user_data[USER_DATA] && user_data[USER_DATA].user_token ? user_data[USER_DATA].user_token : false;\n\n    const product_data = product && product[PRODUCT_KEY] ? product[CATEGORY_KEY] : undefined;\n    const addProductReqeustStatus = product_data && product_data[ADD_PRODUCT_REQUEST_STATUS] ? product_data[ADD_PRODUCT_REQUEST_STATUS] : {};\n\n    return ({\n        user_token,\n        addProductReqeustStatus\n    });\n}\n\nexport default connect(mapToProps)(SelectCategory);","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { updateSystemData } from '../../../redux/system/Action'\nimport { SYSTEM_DATA_PAGE_TITLE, PRODUCT_KEY, ADD_PRODUCT_FORM, ADD_PRODUCT_REQEUST_LOADING, ADD_PRODUCT_REQUEST_STATUS, ADD_PRODUCT_ERRORS, ADD_PRODUCT_FORM_NAME, ADD_PRODUCT_FORM_SHORT_DESCRIPTION, ADD_PRODUCT_FORM_LONG_DESCRIPTION, ADD_PRODUCT_FORM_BRAND, ADD_PRODUCT_FORM_DISTRIBUTOR, ADD_PRODUCT_FORM_DELIVERY_TIME_IN_DAYS, ADD_PRODUCT_FORM_RETAIL_PRICE, ADD_PRODUCT_FORM_REFILL_PRICE, ADD_PRODUCT_FORM_DISCOUNT, ADD_PRODUCT_FORM_NOTES, ADD_PRODUCT_FORM_ALERT, ADD_PRODUCT_FORM_QUANTITY, ADD_PRODUCT_FORM_SIZE, ADD_PRODUCT_FORM_WEIGHT, ADD_PRODUCT_FORM_UNITS, ADD_PRODUCT_FORM_AVERAGE_LIFE_IN_DAYS, ADD_PRODUCT_FORM_MFG_DATE, ADD_PRODUCT_FORM_EXPIRY_DATE, ADD_PRODUCT_FORM_CODE, ADD_PRODUCT_FORM_PUP_GTIN_CODE, MESSAGE, SUCCESS, ERROR, STATUS, ADD_PRODUCT_FORM_CATEGORY_ID, ADD_PRODUCT_FORM_SUB_CATEGORY_ID, ADD_PRODUCT_IMAGES, ADD_PRODUCT_FORM_UPLOADED_IMAGES, ADD_PRODUCT_IS_UPLOADING_IMAGES, ADD_PRODUCT_UPLOAD_TOTAL_IMAGES_COUNT } from '../../../redux/Types'\nimport { updateProductUIConstraints, resetProductState, updateAddProductFormData, createProduct } from '../../../redux/product/Action'\nimport { Helper } from '../../../apis'\nimport { SelectCalendar, SelectCategory, UploadImageContainer } from '../../../components/dashboard/product'\nimport { refillAddSubCategory } from '../../../apis/APIs'\nimport SelectSubCategory from '../../../components/dashboard/product/SelectSubCategory'\nimport Utils from '../../../components/util/Utils'\nimport { ToastsStore } from 'react-toasts'\n\nclass AddProduct extends PureComponent {\n    static propTypes = {\n\n    }\n\n    componentDidMount = () => {\n\n        this.init();\n    }\n\n    init = () => {\n        const { updateSystemData } = this.props;\n\n        var arrows;\n        if (window.KTUtil.isRTL()) {\n            arrows = {\n                leftArrow: '<i className=\"la la-angle-right\"></i>',\n                rightArrow: '<i className=\"la la-angle-left\"></i>'\n            }\n        } else {\n            arrows = {\n                leftArrow: '<i className=\"la la-angle-left\"></i>',\n                rightArrow: '<i className=\"la la-angle-right\"></i>'\n            }\n        }\n\n        window.$('#product_mfg_date').datepicker({\n            rtl: window.KTUtil.isRTL(),\n            todayHighlight: true,\n            orientation: \"bottom left\",\n            templates: arrows\n        }).on(\"changeDate\", function (e) {\n            console.log(\"data ===> mfg\", new Date(e.date));\n        });\n\n        window.$('#product_expiry_date').datepicker({\n            rtl: window.KTUtil.isRTL(),\n            todayHighlight: true,\n            orientation: \"bottom left\",\n            templates: arrows\n        });\n\n        updateSystemData({\n            [SYSTEM_DATA_PAGE_TITLE]: \"Refill | Add Product\"\n        });\n    }\n\n\n    submit = (e) => {\n        e.preventDefault();\n\n        const {\n            name,\n            short_description,\n            long_description,\n            brand,\n            distributor,\n            delivery_time_in_days,\n            retail_price,\n            refill_price,\n            discount,\n            notes,\n            alert,\n            quantity,\n            weight,\n            size,\n            units,\n            average_life_in_days,\n            mfg_date,\n            expiry_date,\n            code,\n            pup_gtin_code,\n            category_id,\n            sub_category_id,\n            images,\n\n            loading,\n            image_uploading,\n            image_uploading_count,\n            uploaded_images,\n\n            updateProductUIConstraints,\n            createProduct\n        } = this.props;\n        if (loading || image_uploading) return;\n\n        const requestBody = {\n            name,\n            short_description,\n            long_description,\n            brand,\n            distributor,\n            delivery_time_in_days,\n            retail_price,\n            refill_price,\n            discount,\n            notes,\n            alert,\n            quantity,\n            weight,\n            size,\n            units,\n            average_life_in_days,\n            mfg_date,\n            expiry_date,\n            code,\n            pup_gtin_code,\n            category_id,\n            sub_category_id,\n            images\n        };\n\n\n        Helper.validate(Object.keys(requestBody), requestBody)\n            .then(({ status, response }) => {\n                if (status) {\n                    updateProductUIConstraints({\n                        [ADD_PRODUCT_ERRORS]: []\n                    });\n\n                    if (images && images.length > 0 && image_uploading_count === images.length) {\n                        if (uploaded_images && uploaded_images.length === images.length) {\n                            // updateProductUIConstraints({\n                            //     [ADD_PRODUCT_IS_UPLOADING_IMAGES]: false\n                            // });\n\n                            console.log(\"Create product ===> while all uploaded\");\n                            createProduct();\n                        }\n                    } else {\n                        updateProductUIConstraints({\n                            [ADD_PRODUCT_IS_UPLOADING_IMAGES]: true\n                        });\n                    }\n                } else updateProductUIConstraints({\n                    [ADD_PRODUCT_ERRORS]: response && response.length ? response : []\n                });\n            }).catch(err => console.log(err));\n    }\n\n    /** On error */\n    isError = (key) => {\n        const { errors } = this.props;\n\n        if (errors && errors.length) {\n            return errors.findIndex(ele => (ele.fieldName === key)) > -1 ? { status: true, message: errors[errors.findIndex(ele => (ele.fieldName === key))].message } : { status: false, message: \"\" };\n        } else return { status: false, message: \"\" }\n    }\n\n    onChangeText = (key, value) => {\n        const { updateAddProductFormData } = this.props;\n\n        updateAddProductFormData({\n            [key]: value\n        });\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const { reqeustStatus, images, uploaded_images, image_uploading_count, updateProductUIConstraints, createProduct, image_uploading, history } = this.props;\n\n        const prevReqeustStatus = prevProps && prevProps.reqeustStatus ? prevProps.reqeustStatus : {};\n        if (reqeustStatus[STATUS] !== prevReqeustStatus[STATUS]) {\n            switch (reqeustStatus[STATUS]) {\n                case SUCCESS:\n                    this.resetProductData();\n                    ToastsStore.success(\"Product has been created successfully\");\n                    history.replace('/product/list');\n                    break;\n                case ERROR:\n                    const status = reqeustStatus[MESSAGE] && reqeustStatus[MESSAGE].status ? reqeustStatus[MESSAGE].status : 500;\n                    const emptyKeys = reqeustStatus[MESSAGE] && reqeustStatus[MESSAGE].status && reqeustStatus[MESSAGE].emptyKeys && reqeustStatus[MESSAGE].emptyKeys.message ? reqeustStatus[MESSAGE].emptyKeys.message : [];\n\n                    switch (status) {\n                        case 422:\n                            let _emptyKeys = emptyKeys && emptyKeys.length ? emptyKeys.map(ele => {\n                                return ({\n                                    fieldName: ele.fieldName,\n                                    message: `Required data in ${ele.type}.`\n                                });\n                            }) : [];\n\n                            updateProductUIConstraints({\n                                [ADD_PRODUCT_ERRORS]: _emptyKeys\n                            });\n                            ToastsStore.error(\"Validation Error\", 2000);\n                            break;\n                        default:\n                    }\n                    break;\n            }\n        }\n\n        if (image_uploading_count !== prevProps.image_uploading_count) {\n            if (images && image_uploading_count === images.length) {\n                Utils.log(\"Uploading end\");\n\n                if (uploaded_images && uploaded_images.length === images.length) {\n                    updateProductUIConstraints({\n                        [ADD_PRODUCT_IS_UPLOADING_IMAGES]: false\n                    });\n                    console.log(\"Create product ===> while uploading end\");\n                    createProduct();\n                }\n            }\n        }\n    }\n\n    _handleErrorMessage = (key) => {\n        const data = this.isError(key);\n\n        if (data && data.status) return <span className=\"form-text text-error text-right\">{data.message}</span>;\n\n        return <div />\n    }\n\n    componentWillUnmount = () => {\n        this.resetProductData();\n    }\n\n    resetProductData = () => {\n        const { resetProductState } = this.props;\n\n        resetProductState();\n    }\n\n    render() {\n        const {\n            name,\n            short_description,\n            long_description,\n            brand,\n            distributor,\n            delivery_time_in_days,\n            retail_price,\n            refill_price,\n            discount,\n            notes,\n            alert,\n            quantity,\n            weight,\n            units,\n            average_life_in_days,\n            mfg_date,\n            expiry_date,\n            code,\n            size,\n            pup_gtin_code,\n            category_id,\n            sub_category_id,\n\n            loading,\n            image_uploading\n        } = this.props;\n\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n\n                {/* <!-- begin:: Subheader --> */}\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Product </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"></span>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"></i></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"></span>\n                                <a href=\"\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Add </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* <!-- end:: Subheader --> */}\n\n                {/* <!-- begin:: Content --> */}\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                            <div className=\"kt-grid  kt-wizard-v1 kt-wizard-v1--white\" id=\"kt_contacts_add\" data-ktwizard-state=\"step-first\">\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v1__wrapper\">\n\n                                    {/* <!--begin: Form Wizard Form--> */}\n                                    <form className=\"kt-form\" onSubmit={this.submit.bind(this)}>\n\n                                        {/* <!--begin: Form Wizard Step 1--> */}\n                                        <div className=\"kt-wizard-v1__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state=\"current\">\n                                            <div className=\"kt-heading kt-heading--md\">Products Details:</div>\n                                            <div className=\"kt-section kt-section--first\">\n                                                <div className=\"kt-wizard-v1__form\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-xl-12\">\n                                                            <div className=\"kt-section__body\">\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Image</label>\n                                                                    <UploadImageContainer\n                                                                        error_label={this._handleErrorMessage(\"images\")}\n                                                                    />\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Name*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter product name\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_NAME, e.target.value)} value={name} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"name\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Short Description*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <textarea className=\"form-control\" id=\"exampleTextarea\" rows=\"3\" placeholder=\"Enter short description\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_SHORT_DESCRIPTION, e.target.value)} value={short_description}></textarea>\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"short_description\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Long Description*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <textarea className=\"form-control\" id=\"exampleTextarea\" rows=\"3\" placeholder=\"Enter long description\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_LONG_DESCRIPTION, e.target.value)} value={long_description}></textarea>\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"long_description\")}\n                                                                    </div>\n                                                                </div>\n\n                                                                <SelectCategory\n                                                                    error_label={this._handleErrorMessage(\"category_id\")}\n                                                                    handleOnChangeCategory={(id) => this.onChangeText(ADD_PRODUCT_FORM_CATEGORY_ID, id)}\n                                                                    label={\"Category\"}\n                                                                    _id={\"product_category_list\"}\n                                                                />\n\n                                                                {\n                                                                    category_id ?\n                                                                        <SelectSubCategory\n                                                                            error_label={this._handleErrorMessage(\"sub_category_id\")}\n                                                                            handleOnChangeCategory={(id) => this.onChangeText(ADD_PRODUCT_FORM_SUB_CATEGORY_ID, id)}\n                                                                            label={\"Sub Category\"}\n                                                                            category_id={category_id}\n                                                                            _id={\"product_sub_category_list\"}\n                                                                        /> : null\n                                                                }\n\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Brand*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter brand\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_BRAND, e.target.value)} value={brand} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"brand\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Distributor*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter distributor\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_DISTRIBUTOR, e.target.value)} value={distributor} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"distributor\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Delivery Time in Days*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter delivery time in days\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_DELIVERY_TIME_IN_DAYS, e.target.value)} value={delivery_time_in_days} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"delivery_time_in_days\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Retail Price*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter retail price\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_RETAIL_PRICE, e.target.value)} value={retail_price} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"retail_price\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Refill Price*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter refill price\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_REFILL_PRICE, e.target.value)} value={refill_price} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"refill_price\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Discount*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter discount\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_DISCOUNT, e.target.value)} value={discount} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"discount\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Notes*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <textarea className=\"form-control\" id=\"exampleTextarea\" rows=\"3\" placeholder=\"Enter notes\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_NOTES, e.target.value)} value={notes}></textarea>\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"notes\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Alert*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <textarea className=\"form-control\" id=\"exampleTextarea\" rows=\"3\" placeholder=\"Enter alerts\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_ALERT, e.target.value)} value={alert}></textarea>\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"alert\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Quantity*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter quantity\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_QUANTITY, e.target.value)} value={quantity} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"quantity\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Size*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter size\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_SIZE, e.target.value)} value={size} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"size\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Weight*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter weight\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_WEIGHT, e.target.value)} value={weight} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"weight\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Units*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <select className=\"form-control\" aria-invalid=\"false\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_UNITS, e.target.value)} value={units}>\n                                                                            <option>Select Unit...</option>\n                                                                            <option value=\"ounce\">ounce</option>\n                                                                            <option value=\"litter\">litter</option>\n                                                                            <option value=\"gm\">gm</option>\n                                                                            <option value=\"kg\">kg</option>\n                                                                        </select>\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"units\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Average Life in Days*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter average life in days\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_AVERAGE_LIFE_IN_DAYS, e.target.value)} value={average_life_in_days} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"average_life_in_days\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Mfg Date*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <SelectCalendar\n                                                                            _id=\"product_mfg_date\"\n                                                                            placeholder=\"Select mfg date\"\n                                                                            handleOnChange={(date) => this.onChangeText(ADD_PRODUCT_FORM_MFG_DATE, date)}\n                                                                            value={mfg_date}\n                                                                            calendarOptions={{\n                                                                                rtl: window.KTUtil.isRTL(),\n                                                                                todayHighlight: true,\n                                                                                orientation: \"bottom left\",\n                                                                                endDate: new Date()\n                                                                            }}\n                                                                        />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"mfg_date\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Expiry Date*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <SelectCalendar\n                                                                            _id=\"product_expiry_date\"\n                                                                            placeholder=\"Select expiry date\"\n                                                                            handleOnChange={(date) => this.onChangeText(ADD_PRODUCT_FORM_EXPIRY_DATE, date)}\n                                                                            value={expiry_date}\n                                                                            calendarOptions={{\n                                                                                rtl: window.KTUtil.isRTL(),\n                                                                                todayHighlight: true,\n                                                                                orientation: \"bottom left\",\n                                                                                startDate: new Date()\n                                                                            }}\n                                                                        />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"expiry_date\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">Code*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter code\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_CODE, e.target.value)} value={code} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"code\")}\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\">PUP/GTIN Code*</label>\n                                                                    <div className=\"col-lg-9 col-xl-9\">\n                                                                        <input className=\"form-control\" type=\"text\" placeholder=\"Enter PUP/GTIN Code\" onChange={(e) => this.onChangeText(ADD_PRODUCT_FORM_PUP_GTIN_CODE, e.target.value)} value={pup_gtin_code} />\n                                                                        {/* display error */}\n                                                                        {this._handleErrorMessage(\"pup_gtin_code\")}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        {/* <!--end: Form Wizard Step 1--> */}\n\n\n                                        {/* <!--begin: Form Actions --> */}\n                                        <div className=\"kt-form__actions\">\n                                            <button type=\"submit\" className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\">\n                                                {image_uploading ? \"Uploading...\" : loading ? \"Loading...\" : \"Submit\"}\n                                            </button>\n                                        </div>\n\n                                        {/* <!--end: Form Actions --> */}\n                                    </form>\n\n                                    {/* <!--end: Form Wizard Form--> */}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* <!-- end:: Content --> */}\n            </div>\n        )\n    }\n}\n\nconst mapToProps = ({ product }) => {\n    const product_data = product && product[PRODUCT_KEY] ? product[PRODUCT_KEY] : undefined;\n\n    const addProductFormData = product_data && product_data[ADD_PRODUCT_FORM] ? product_data[ADD_PRODUCT_FORM] : undefined;\n    const name = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_NAME] ? addProductFormData[ADD_PRODUCT_FORM_NAME] : \"\";\n    const short_description = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_SHORT_DESCRIPTION] ? addProductFormData[ADD_PRODUCT_FORM_SHORT_DESCRIPTION] : \"\";\n    const long_description = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_LONG_DESCRIPTION] ? addProductFormData[ADD_PRODUCT_FORM_LONG_DESCRIPTION] : \"\";\n    const brand = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_BRAND] ? addProductFormData[ADD_PRODUCT_FORM_BRAND] : \"\";\n    const distributor = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_DISTRIBUTOR] ? addProductFormData[ADD_PRODUCT_FORM_DISTRIBUTOR] : \"\";\n    const delivery_time_in_days = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_DELIVERY_TIME_IN_DAYS] ? addProductFormData[ADD_PRODUCT_FORM_DELIVERY_TIME_IN_DAYS] : \"\";\n    const retail_price = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_RETAIL_PRICE] ? addProductFormData[ADD_PRODUCT_FORM_RETAIL_PRICE] : \"\";\n    const refill_price = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_REFILL_PRICE] ? addProductFormData[ADD_PRODUCT_FORM_REFILL_PRICE] : \"\";\n    const discount = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_DISCOUNT] ? addProductFormData[ADD_PRODUCT_FORM_DISCOUNT] : \"\";\n    const notes = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_NOTES] ? addProductFormData[ADD_PRODUCT_FORM_NOTES] : \"\";\n    const alert = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_ALERT] ? addProductFormData[ADD_PRODUCT_FORM_ALERT] : \"\";\n    const quantity = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_QUANTITY] ? addProductFormData[ADD_PRODUCT_FORM_QUANTITY] : \"\";\n    const weight = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_WEIGHT] ? addProductFormData[ADD_PRODUCT_FORM_WEIGHT] : \"\";\n    const size = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_SIZE] ? addProductFormData[ADD_PRODUCT_FORM_SIZE] : \"\";\n    const units = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_UNITS] ? addProductFormData[ADD_PRODUCT_FORM_UNITS] : \"\";\n    const average_life_in_days = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_AVERAGE_LIFE_IN_DAYS] ? addProductFormData[ADD_PRODUCT_FORM_AVERAGE_LIFE_IN_DAYS] : \"\";\n    const mfg_date = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_MFG_DATE] ? addProductFormData[ADD_PRODUCT_FORM_MFG_DATE] : \"\";\n    const expiry_date = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_EXPIRY_DATE] ? addProductFormData[ADD_PRODUCT_FORM_EXPIRY_DATE] : \"\";\n    const code = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_CODE] ? addProductFormData[ADD_PRODUCT_FORM_CODE] : \"\";\n    const pup_gtin_code = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_PUP_GTIN_CODE] ? addProductFormData[ADD_PRODUCT_FORM_PUP_GTIN_CODE] : \"\";\n    const category_id = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_CATEGORY_ID] ? addProductFormData[ADD_PRODUCT_FORM_CATEGORY_ID] : \"\";\n    const sub_category_id = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_SUB_CATEGORY_ID] ? addProductFormData[ADD_PRODUCT_FORM_SUB_CATEGORY_ID] : \"\";\n    const uploaded_images = addProductFormData && addProductFormData[ADD_PRODUCT_FORM_UPLOADED_IMAGES] && addProductFormData[ADD_PRODUCT_FORM_UPLOADED_IMAGES].length ? addProductFormData[ADD_PRODUCT_FORM_UPLOADED_IMAGES] : undefined;\n\n    const errors = product_data && product_data[ADD_PRODUCT_ERRORS] ? product_data[ADD_PRODUCT_ERRORS] : [];\n    const loading = product_data && product_data[ADD_PRODUCT_REQEUST_LOADING] ? product_data[ADD_PRODUCT_REQEUST_LOADING] : false;\n    const reqeustStatus = product_data && product_data[ADD_PRODUCT_REQUEST_STATUS] ? product_data[ADD_PRODUCT_REQUEST_STATUS] : {};\n    const images = product_data && product_data[ADD_PRODUCT_IMAGES] && product_data[ADD_PRODUCT_IMAGES].length ? product_data[ADD_PRODUCT_IMAGES] : undefined;\n    const image_uploading_count = product_data && product_data[ADD_PRODUCT_UPLOAD_TOTAL_IMAGES_COUNT] ? product_data[ADD_PRODUCT_UPLOAD_TOTAL_IMAGES_COUNT] : 0;\n    const image_uploading = product_data && product_data[ADD_PRODUCT_IS_UPLOADING_IMAGES] ? product_data[ADD_PRODUCT_IS_UPLOADING_IMAGES] : false;\n\n    console.log(\"data ===> \", {\n        loading,\n        errors\n    });\n\n    return ({\n        name,\n        short_description,\n        long_description,\n        brand,\n        distributor,\n        delivery_time_in_days,\n        retail_price,\n        refill_price,\n        discount,\n        notes,\n        alert,\n        quantity,\n        weight,\n        size,\n        units,\n        average_life_in_days,\n        mfg_date,\n        expiry_date,\n        code,\n        pup_gtin_code,\n        category_id,\n        sub_category_id,\n        uploaded_images,\n\n        errors,\n        loading,\n        reqeustStatus,\n\n        images,\n        images_length: images && images.length ? images.length : 0,\n        uploaded_images_length: uploaded_images && uploaded_images ? uploaded_images.length : 0,\n        image_uploading_count,\n        image_uploading\n    });\n}\n\nexport default connect(mapToProps, {\n    updateProductUIConstraints,\n    updateAddProductFormData,\n    updateSystemData,\n    resetProductState,\n    createProduct\n})(AddProduct);\n\n\n\n\n\n\n\n// <div className=\"col-lg-9 col-xl-6\">\n//                                                                         <div className=\"kt-avatar kt-avatar--outline m-2\" id=\"kt_contacts_add_avatar\">\n//                                                                             <div className=\"kt-avatar__holder\" style={{ backgroundImage: 'url(/assets/media/users/300_10.jpg)' }}></div>\n//                                                                             <label className=\"kt-avatar__upload\" data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Change avatar\">\n//                                                                                 <i className=\"fa fa-pen\"></i>\n//                                                                                 <input type=\"file\" name=\"kt_contacts_add_avatar\" />\n//                                                                             </label>\n//                                                                             <span className=\"kt-avatar__cancel\" style={{ display: \"flex\" }} data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Cancel avatar\">\n//                                                                                 <i className=\"fa fa-times\"></i>\n//                                                                             </span>\n//                                                                         </div>\n//                                                                         <div className=\"kt-avatar kt-avatar--outline m-2\" id=\"kt_contacts_add_avatar\">\n//                                                                             <div className=\"kt-avatar__holder\" style={{ backgroundImage: 'url(./assets/media/users/300_10.jpg)' }}></div>\n//                                                                             <label className=\"kt-avatar__upload\" data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Change avatar\">\n//                                                                                 <i className=\"fa fa-pen\"></i>\n//                                                                                 <input type=\"file\" name=\"kt_contacts_add_avatar\" />\n//                                                                             </label>\n//                                                                             <span className=\"kt-avatar__cancel\" data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Cancel avatar\">\n//                                                                                 <i className=\"fa fa-times\"></i>\n//                                                                             </span>\n//                                                                         </div>\n//                                                                         <div className=\"kt-avatar kt-avatar--outline m-2\" id=\"kt_contacts_add_avatar\">\n//                                                                             <div className=\"kt-avatar__holder\" style={{ backgroundImage: 'url(./assets/media/users/300_10.jpg)' }}></div>\n//                                                                             <label className=\"kt-avatar__upload\" data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Change avatar\">\n//                                                                                 <i className=\"fa fa-pen\"></i>\n//                                                                                 <input type=\"file\" name=\"kt_contacts_add_avatar\" />\n//                                                                             </label>\n//                                                                             <span className=\"kt-avatar__cancel\" data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Cancel avatar\">\n//                                                                                 <i className=\"fa fa-times\"></i>\n//                                                                             </span>\n//                                                                         </div>\n//                                                                         <div className=\"kt-avatar kt-avatar--outline m-2\" id=\"kt_contacts_add_avatar\">\n//                                                                             <div className=\"kt-avatar__holder\" style={{ backgroundImage: 'url(./assets/media/users/300_10.jpg)' }}></div>\n//                                                                             <label className=\"kt-avatar__upload\" data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Change avatar\">\n//                                                                                 <i className=\"fa fa-pen\"></i>\n//                                                                                 <input type=\"file\" name=\"kt_contacts_add_avatar\" />\n//                                                                             </label>\n//                                                                             <span className=\"kt-avatar__cancel\" data-toggle=\"kt-tooltip\" title=\"\" data-original-title=\"Cancel avatar\">\n//                                                                                 <i className=\"fa fa-times\"></i>\n//                                                                             </span>\n//                                                                         </div>\n//                                                                     </div>"],"sourceRoot":""}