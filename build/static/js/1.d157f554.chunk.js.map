{"version":3,"sources":["redux/category/Action.js","components/dashboard/category/Table.js","components/dashboard/category/SelectCategory.js","components/dashboard/category/ActionButton.js","components/dashboard/category/index.js"],"names":["createCategory","dispatch","getState","formData","CATEGORY_ROOT","CATEGORY_KEY","CATEGORY_FORM","data","USER_ROOT","USER_KEY","user_token","USER_DATA","undefined","updateCategoryUIConstraints","CATEGORY_REQUEST_STATUS","STATUS","EMPTY","MESSAGE","message","TOKEN_NOT_FOUND","CATEGORY_REQEUST_LOADING","body","CATEGORY_FORM_NAME","console","log","refillAddCategory","then","res","a","Utils","status","SUCCESS","ERROR","catch","error","createSubCategory","SUB_CATEGORY_FORM","SUB_CATEGORY_REQUEST_STATUS","SUB_CATEGORY_REQEUST_LOADING","SUB_CATEGORY_FORM_NAME","SUB_CATEGORY_FORM_CATEGORY_ID","refillAddSubCategory","enableCategory","id","ENABLE_CATEGORY_REQUEST_STATUS","ENABLE_CATEGORY_REQEUST_LOADING","refillEnableCategory","disableCategory","DISABLE_CATEGORY_REQUEST_STATUS","DISABLE_CATEGORY_REQEUST_LOADING","refillDisableCategory","enableSubCategory","category_id","sub_category_id","ENABLE_SUB_CATEGORY_REQUEST_STATUS","ENABLE_SUB_CATEGORY_REQEUST_LOADING","refillEnableSubCategory","disableSubCategory","DISABLE_SUB_CATEGORY_REQUEST_STATUS","DISABLE_SUB_CATEGORY_REQEUST_LOADING","refillDisableSubCategory","updateCategoryFormData","obj","Object","assign","updateCategoryState","updateSubCategoryFormData","type","CATEGORY_UPDATE","payload","resetCategoryDataState","CATEGORY_RESET","Table","_category","_sub_category","_handle_table_row","props","this","table_id","className","PureComponent","SelectCategory","componentDidMount","init","initSelectUI","that","window","$","select2","placeholder","allowClear","ajax","url","getCategoriesWithSearch","delay","headers","getAuthoriztionToken","params","search","term","page","page_size","processResults","results","items","length","map","ele","_id","pagination","more","hasMore","cache","escapeMarkup","markup","minimumInputLength","templateResult","repo","loading","text","name","templateSelection","onChangeSubCategoryFormText","key","value","resetCategorySelect","val","trigger","componentDidUpdate","prevProps","subCategoryReqeustStatus","prevSubCategoryReqeustStatus","error_label","class","connect","user","category","user_data","category_data"],"mappings":"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","file":"static/js/1.d157f554.chunk.js","sourcesContent":["import { refillChangePassword, refillAddCategory, refillAddSubCategory, refillEnableCategory, refillDisableCategory, refillEnableSubCategory, refillDisableSubCategory } from '../../apis/APIs'\nimport Utils from '../../components/util/Utils';\nimport { CHANGE_PASSWORD_KEY, CHANGE_PASSWORD_ROOT, CHANGE_PASSWORD_FORM, CHANGE_PASSWORD_UPDATE, USER_ROOT, USER_KEY, USER_DATA, TOKEN_NOT_FOUND, CHANGE_PASSWORD_REQUEST_STATUS, STATUS, EMPTY, MESSAGE, CHANGE_PASSWORD_REQEUST_LOADING, CHANGE_PASSWORD_FORM_OLD_PASSWORD, CHANGE_PASSWORD_FORM_PASSWORD, CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD, SUCCESS, ERROR, CATEGORY_ROOT, CATEGORY_KEY, CATEGORY_FORM, CATEGORY_REQUEST_STATUS, CATEGORY_REQEUST_LOADING, SUB_CATEGORY_FORM_NAME, CATEGORY_FORM_NAME, CATEGORY_UPDATE, SUB_CATEGORY_FORM, SUB_CATEGORY_REQUEST_STATUS, SUB_CATEGORY_REQEUST_LOADING, CATEGORY_RESET, SUB_CATEGORY_FORM_CATEGORY_ID, DELETE_CATEGORY_REQUEST_STATUS, DELETE_PRODUCT_REQEUST_LOADING, DELETE_CATEGORY_REQEUST_LOADING, ENABLE_CATEGORY_REQUEST_STATUS, ENABLE_CATEGORY_REQEUST_LOADING, DISABLE_CATEGORY_REQUEST_STATUS, DISABLE_CATEGORY_REQEUST_LOADING, ENABLE_SUB_CATEGORY_REQUEST_STATUS, ENABLE_SUB_CATEGORY_REQEUST_LOADING, DISABLE_SUB_CATEGORY_REQUEST_STATUS, DISABLE_SUB_CATEGORY_REQEUST_LOADING } from '../Types';\nimport { RefillStorage } from '../../apis';\n\n/** Create category */\nexport const createCategory = () => {\n    return (dispatch, getState) => {\n        try {\n            //Form Data\n            const category_data = getState()[CATEGORY_ROOT][CATEGORY_KEY];\n            const formData = category_data[CATEGORY_FORM];\n\n            //User data\n            const data = getState()[USER_ROOT][USER_KEY];\n            const user_token = data && data[USER_DATA] && data[USER_DATA].user_token ? data[USER_DATA].user_token : undefined;\n\n            if (!user_token) {\n                dispatch(updateCategoryUIConstraints({\n                    [CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: EMPTY,\n                        [MESSAGE]: {\n                            message: TOKEN_NOT_FOUND\n                        }\n                    },\n                    [CATEGORY_REQEUST_LOADING]: false\n                }));\n                return;\n            }\n\n            //Intialize the request status and loading\n            dispatch(updateCategoryUIConstraints({\n                [CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: EMPTY,\n                    [MESSAGE]: \"\"\n                },\n                [CATEGORY_REQEUST_LOADING]: true\n            }));\n\n            const body = {\n                \"user_token\": user_token,\n                \"name\": formData[CATEGORY_FORM_NAME]\n            }\n\n            console.log(\"add category body ===> body\", body);\n\n            refillAddCategory(body).then(async (res) => {\n                Utils.log(\"Refill Add Category Response ===> \", res);\n\n                if (res && res.status === 200) {\n                    dispatch(updateCategoryUIConstraints({\n                        [CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: SUCCESS,\n                            [MESSAGE]: res\n                        },\n                        [CATEGORY_REQEUST_LOADING]: false\n                    }));\n                } else {\n                    dispatch(updateCategoryUIConstraints({\n                        [CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: ERROR,\n                            [MESSAGE]: res\n                        },\n                        [CATEGORY_REQEUST_LOADING]: false\n                    }));\n                }\n            }).catch(error => {\n                Utils.log(\"Refill Add Category ===> error\", error);\n                dispatch(updateCategoryUIConstraints({\n                    [CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: ERROR,\n                        [MESSAGE]: \"\"\n                    },\n                    [CATEGORY_REQEUST_LOADING]: false\n                }));\n            });\n        } catch (error) {\n            Utils.log(\"Refill Add Category ===> error\", error);\n            dispatch(updateCategoryUIConstraints({\n                [CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: ERROR,\n                    [MESSAGE]: \"\"\n                },\n                [CATEGORY_REQEUST_LOADING]: false\n            }));\n        }\n    }\n}\n\n/** Create sub category */\nexport const createSubCategory = () => {\n    return (dispatch, getState) => {\n        try {\n            //Form Data\n            const sub_category_data = getState()[CATEGORY_ROOT][CATEGORY_KEY];\n            const formData = sub_category_data[SUB_CATEGORY_FORM];\n\n            //User data\n            const data = getState()[USER_ROOT][USER_KEY];\n            const user_token = data && data[USER_DATA] && data[USER_DATA].user_token ? data[USER_DATA].user_token : undefined;\n\n            if (!user_token) {\n                dispatch(updateCategoryUIConstraints({\n                    [SUB_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: EMPTY,\n                        [MESSAGE]: {\n                            message: TOKEN_NOT_FOUND\n                        }\n                    },\n                    [SUB_CATEGORY_REQEUST_LOADING]: false\n                }));\n                return;\n            }\n\n            //Intialize the request status and loading\n            dispatch(updateCategoryUIConstraints({\n                [SUB_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: EMPTY,\n                    [MESSAGE]: \"\"\n                },\n                [SUB_CATEGORY_REQEUST_LOADING]: true\n            }));\n\n            const body = {\n                \"user_token\": user_token,\n                \"name\": formData[SUB_CATEGORY_FORM_NAME],\n                \"category_id\": formData[SUB_CATEGORY_FORM_CATEGORY_ID]\n            }\n\n            console.log(\"body ===> user_token\", body);\n\n            refillAddSubCategory(body).then(async (res) => {\n                Utils.log(\"Refill Add Category Response ===> \", res);\n\n                if (res && res.status === 200) {\n                    dispatch(updateCategoryUIConstraints({\n                        [SUB_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: SUCCESS,\n                            [MESSAGE]: res\n                        },\n                        [SUB_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                } else {\n                    dispatch(updateCategoryUIConstraints({\n                        [SUB_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: ERROR,\n                            [MESSAGE]: res\n                        },\n                        [SUB_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                }\n            }).catch(error => {\n                Utils.log(\"Refill Add Category ===> error\", error);\n                dispatch(updateCategoryUIConstraints({\n                    [SUB_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: ERROR,\n                        [MESSAGE]: \"\"\n                    },\n                    [SUB_CATEGORY_REQEUST_LOADING]: false\n                }));\n            });\n        } catch (error) {\n            Utils.log(\"Refill Add Category ===> error\", error);\n            dispatch(updateCategoryUIConstraints({\n                [SUB_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: ERROR,\n                    [MESSAGE]: \"\"\n                },\n                [SUB_CATEGORY_REQEUST_LOADING]: false\n            }));\n        }\n    }\n}\n\n/** Enable category */\nexport const enableCategory = (id) => {\n    return (dispatch, getState) => {\n        try {\n\n            //User data\n            const data = getState()[USER_ROOT][USER_KEY];\n            const user_token = data && data[USER_DATA] && data[USER_DATA].user_token ? data[USER_DATA].user_token : undefined;\n\n            if (!user_token) {\n                dispatch(updateCategoryUIConstraints({\n                    [ENABLE_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: EMPTY,\n                        [MESSAGE]: {\n                            message: TOKEN_NOT_FOUND\n                        }\n                    },\n                    [ENABLE_CATEGORY_REQEUST_LOADING]: false\n                }));\n                return;\n            }\n\n            //Intialize the request status and loading\n            dispatch(updateCategoryUIConstraints({\n                [ENABLE_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: EMPTY,\n                    [MESSAGE]: \"\"\n                },\n                [ENABLE_CATEGORY_REQEUST_LOADING]: true\n            }));\n\n            const body = {\n                \"user_token\": user_token,\n                \"category_id\": id\n            }\n\n            console.log(\"enable category body ===> body\", body);\n\n            refillEnableCategory(body).then(async (res) => {\n                Utils.log(\"Refill Enable Category Response ===> \", res);\n\n                if (res && res.status === 200) {\n                    dispatch(updateCategoryUIConstraints({\n                        [ENABLE_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: SUCCESS,\n                            [MESSAGE]: res\n                        },\n                        [ENABLE_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                } else {\n                    dispatch(updateCategoryUIConstraints({\n                        [ENABLE_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: ERROR,\n                            [MESSAGE]: res\n                        },\n                        [ENABLE_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                }\n            }).catch(error => {\n                Utils.log(\"Refill Add Category ===> error\", error);\n                dispatch(updateCategoryUIConstraints({\n                    [ENABLE_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: ERROR,\n                        [MESSAGE]: \"\"\n                    },\n                    [ENABLE_CATEGORY_REQEUST_LOADING]: false\n                }));\n            });\n        } catch (error) {\n            Utils.log(\"Refill Add Category ===> error\", error);\n            dispatch(updateCategoryUIConstraints({\n                [ENABLE_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: ERROR,\n                    [MESSAGE]: \"\"\n                },\n                [ENABLE_CATEGORY_REQEUST_LOADING]: false\n            }));\n        }\n    }\n}\n\n/** Disable category */\nexport const disableCategory = (id) => {\n    return (dispatch, getState) => {\n        try {\n\n            //User data\n            const data = getState()[USER_ROOT][USER_KEY];\n            const user_token = data && data[USER_DATA] && data[USER_DATA].user_token ? data[USER_DATA].user_token : undefined;\n\n            if (!user_token) {\n                dispatch(updateCategoryUIConstraints({\n                    [DISABLE_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: EMPTY,\n                        [MESSAGE]: {\n                            message: TOKEN_NOT_FOUND\n                        }\n                    },\n                    [DISABLE_CATEGORY_REQEUST_LOADING]: false\n                }));\n                return;\n            }\n\n            //Intialize the request status and loading\n            dispatch(updateCategoryUIConstraints({\n                [DISABLE_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: EMPTY,\n                    [MESSAGE]: \"\"\n                },\n                [DISABLE_CATEGORY_REQEUST_LOADING]: true\n            }));\n\n            const body = {\n                \"user_token\": user_token,\n                \"category_id\": id\n            }\n\n            console.log(\"enable category body ===> body\", body);\n\n            refillDisableCategory(body).then(async (res) => {\n                Utils.log(\"Refill Enable Category Response ===> \", res);\n\n                if (res && res.status === 200) {\n                    dispatch(updateCategoryUIConstraints({\n                        [DISABLE_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: SUCCESS,\n                            [MESSAGE]: res\n                        },\n                        [DISABLE_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                } else {\n                    dispatch(updateCategoryUIConstraints({\n                        [DISABLE_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: ERROR,\n                            [MESSAGE]: res\n                        },\n                        [DISABLE_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                }\n            }).catch(error => {\n                Utils.log(\"Refill Add Category ===> error\", error);\n                dispatch(updateCategoryUIConstraints({\n                    [DISABLE_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: ERROR,\n                        [MESSAGE]: \"\"\n                    },\n                    [DISABLE_CATEGORY_REQEUST_LOADING]: false\n                }));\n            });\n        } catch (error) {\n            Utils.log(\"Refill Add Category ===> error\", error);\n            dispatch(updateCategoryUIConstraints({\n                [DISABLE_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: ERROR,\n                    [MESSAGE]: \"\"\n                },\n                [DISABLE_CATEGORY_REQEUST_LOADING]: false\n            }));\n        }\n    }\n}\n\n/** Enable sub-category */\nexport const enableSubCategory = ({ category_id, sub_category_id }) => {\n    return (dispatch, getState) => {\n        try {\n\n            //User data\n            const data = getState()[USER_ROOT][USER_KEY];\n            const user_token = data && data[USER_DATA] && data[USER_DATA].user_token ? data[USER_DATA].user_token : undefined;\n\n            if (!user_token) {\n                dispatch(updateCategoryUIConstraints({\n                    [ENABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: EMPTY,\n                        [MESSAGE]: {\n                            message: TOKEN_NOT_FOUND\n                        }\n                    },\n                    [ENABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                }));\n                return;\n            }\n\n            //Intialize the request status and loading\n            dispatch(updateCategoryUIConstraints({\n                [ENABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: EMPTY,\n                    [MESSAGE]: \"\"\n                },\n                [ENABLE_SUB_CATEGORY_REQEUST_LOADING]: true\n            }));\n\n            const body = {\n                \"user_token\": user_token,\n                \"category_id\": category_id,\n                \"sub_category_id\": sub_category_id\n            }\n\n            console.log(\"enable category body ===> body\", body);\n\n            refillEnableSubCategory(body).then(async (res) => {\n                Utils.log(\"Refill Enable Category Response ===> \", res);\n\n                if (res && res.status === 200) {\n                    dispatch(updateCategoryUIConstraints({\n                        [ENABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: SUCCESS,\n                            [MESSAGE]: res\n                        },\n                        [ENABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                } else {\n                    dispatch(updateCategoryUIConstraints({\n                        [ENABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: ERROR,\n                            [MESSAGE]: res\n                        },\n                        [ENABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                }\n            }).catch(error => {\n                Utils.log(\"Refill Add Category ===> error\", error);\n                dispatch(updateCategoryUIConstraints({\n                    [ENABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: ERROR,\n                        [MESSAGE]: \"\"\n                    },\n                    [ENABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                }));\n            });\n        } catch (error) {\n            Utils.log(\"Refill Add Category ===> error\", error);\n            dispatch(updateCategoryUIConstraints({\n                [ENABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: ERROR,\n                    [MESSAGE]: \"\"\n                },\n                [ENABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n            }));\n        }\n    }\n}\n\n/** Disable sub-category */\nexport const disableSubCategory = ({ category_id, sub_category_id }) => {\n    return (dispatch, getState) => {\n        try {\n\n            //User data\n            const data = getState()[USER_ROOT][USER_KEY];\n            const user_token = data && data[USER_DATA] && data[USER_DATA].user_token ? data[USER_DATA].user_token : undefined;\n\n            if (!user_token) {\n                dispatch(updateCategoryUIConstraints({\n                    [DISABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: EMPTY,\n                        [MESSAGE]: {\n                            message: TOKEN_NOT_FOUND\n                        }\n                    },\n                    [DISABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                }));\n                return;\n            }\n\n            //Intialize the request status and loading\n            dispatch(updateCategoryUIConstraints({\n                [DISABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: EMPTY,\n                    [MESSAGE]: \"\"\n                },\n                [DISABLE_SUB_CATEGORY_REQEUST_LOADING]: true\n            }));\n\n            const body = {\n                \"user_token\": user_token,\n                \"category_id\": category_id,\n                \"sub_category_id\": sub_category_id\n            }\n\n            console.log(\"enable category body ===> body\", body);\n\n            refillDisableSubCategory(body).then(async (res) => {\n                Utils.log(\"Refill Enable Category Response ===> \", res);\n\n                if (res && res.status === 200) {\n                    dispatch(updateCategoryUIConstraints({\n                        [DISABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: SUCCESS,\n                            [MESSAGE]: res\n                        },\n                        [DISABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                } else {\n                    dispatch(updateCategoryUIConstraints({\n                        [DISABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                            [STATUS]: ERROR,\n                            [MESSAGE]: res\n                        },\n                        [DISABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                    }));\n                }\n            }).catch(error => {\n                Utils.log(\"Refill Add Category ===> error\", error);\n                dispatch(updateCategoryUIConstraints({\n                    [DISABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                        [STATUS]: ERROR,\n                        [MESSAGE]: \"\"\n                    },\n                    [DISABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n                }));\n            });\n        } catch (error) {\n            Utils.log(\"Refill Add Category ===> error\", error);\n            dispatch(updateCategoryUIConstraints({\n                [DISABLE_SUB_CATEGORY_REQUEST_STATUS]: {\n                    [STATUS]: ERROR,\n                    [MESSAGE]: \"\"\n                },\n                [DISABLE_SUB_CATEGORY_REQEUST_LOADING]: false\n            }));\n        }\n    }\n}\n\n/** Manage Category Form Data */\nexport const updateCategoryFormData = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            const formData = getState()[CATEGORY_ROOT][CATEGORY_KEY];\n            const data = Object.assign(formData[CATEGORY_FORM], obj);\n\n            dispatch(updateCategoryState(Object.assign(formData, {\n                [CATEGORY_FORM]: data\n            })));\n        } catch (error) {\n            Utils.log(\"Update Form Data ===> error \", error);\n        }\n    }\n}\n\n/** Manage Sub Category Form Data */\nexport const updateSubCategoryFormData = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            const formData = getState()[CATEGORY_ROOT][CATEGORY_KEY];\n            const data = Object.assign(formData[SUB_CATEGORY_FORM], obj);\n\n            dispatch(updateCategoryState(Object.assign(formData, {\n                [SUB_CATEGORY_FORM]: data\n            })));\n        } catch (error) {\n            Utils.log(\"Update Form Data ===> error \", error);\n        }\n    }\n}\n\n/** Manage Category UI Constraints */\nexport const updateCategoryUIConstraints = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            const formData = getState()[CATEGORY_ROOT][CATEGORY_KEY];\n            const data = Object.assign(formData, obj);\n\n            dispatch(updateCategoryState(data));\n        } catch (error) {\n            Utils.log(\"Update UI Constraints ===> error \", error);\n        }\n    }\n}\n\n/** Update category data state */\nconst updateCategoryState = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            const formData = getState()[CATEGORY_ROOT][CATEGORY_KEY];\n\n            dispatch({\n                type: CATEGORY_UPDATE,\n                payload: Object.assign(formData, obj)\n            })\n        } catch (error) {\n            Utils.log(\"Update Login State ===> error \", error);\n        }\n    }\n}\n\n/** Reset category data state */\nexport const resetCategoryDataState = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            dispatch({\n                type: CATEGORY_RESET,\n                payload: {}\n            })\n        } catch (error) {\n            Utils.log(\"Update Forgot State ===> error \", error);\n        }\n    }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Table extends PureComponent {\n    static propTypes = {\n        table_id: PropTypes.string,\n        type: PropTypes.string\n    }\n\n    _category = () => <tr>\n        <th>Order ID</th>\n        <th>Name</th>\n        <th>Created Date</th>\n        <th>Actions</th>\n    </tr>\n\n    _sub_category = () => <tr>\n        <th>Order ID</th>\n        <th>Category ID</th>\n        <th>Name</th>\n        <th>Created Date</th>\n        <th>Actions</th>\n    </tr>\n\n    _handle_table_row = () => {\n        const { type } = this.props;\n\n        switch (type) {\n            case 'category':\n                return this._category();\n            case 'sub_category':\n                return this._sub_category();\n        }\n    }\n\n    render() {\n        const { table_id, type } = this.props;\n\n        return (\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <div className=\"kt-portlet kt-portlet--mobile\">\n                    <div className=\"kt-portlet__body\">\n                        {/* <!--begin: Datatable --> */}\n                        <table className=\"table table-striped- table-bordered table-hover table-checkable\" id={table_id}>\n                            <thead>\n                                {this._handle_table_row()}\n                            </thead>\n                        </table>\n\n                        {/* <!--end: Datatable --> */}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n// <div className=\"kt-portlet__head kt-portlet__head--lg\">\n//     <div className=\"kt-portlet__head-label\">\n//         <span className=\"kt-portlet__head-icon\">\n//             <i className=\"kt-font-brand flaticon2-line-chart\"></i>\n//         </span>\n//         <h3 className=\"kt-portlet__head-title\">\n//             Category List\n// \t\t\t\t\t\t\t\t\t\t\t\t</h3>\n//     </div>\n//     <div className=\"kt-portlet__head-toolbar\">\n//         <div className=\"kt-portlet__head-wrapper\">\n//             <div className=\"kt-portlet__head-actions\">\n//                 <div className=\"dropdown dropdown-inline\">\n//                     <button type=\"button\" className=\"btn btn-default btn-icon-sm dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n//                         <i className=\"la la-download\"></i> Export\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n//                     <div className=\"dropdown-menu dropdown-menu-right\">\n//                         <ul className=\"kt-nav\">\n//                             <li className=\"kt-nav__section kt-nav__section--first\">\n//                                 <span className=\"kt-nav__section-text\">Choose an option</span>\n//                             </li>\n//                             <li className=\"kt-nav__item\">\n//                                 <a href=\"#\" className=\"kt-nav__link\">\n//                                     <i className=\"kt-nav__link-icon la la-file-text-o\"></i>\n//                                     <span className=\"kt-nav__link-text\">CSV</span>\n//                                 </a>\n//                             </li>\n//                         </ul>\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     </div>\n// </div>","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport './SelectCategory.css'\nimport { getAuthoriztionToken, getCategoriesWithSearch } from '../../../apis/APIs'\nimport { connect } from 'react-redux'\nimport { USER_KEY, USER_DATA, SUB_CATEGORY_FORM_CATEGORY_ID, STATUS, SUCCESS, CATEGORY_KEY, SUB_CATEGORY_REQUEST_STATUS } from '../../../redux/Types'\nimport { updateSubCategoryFormData } from '../../../redux/category/Action'\n\nclass SelectCategory extends PureComponent {\n    static propTypes = {\n        error_label: PropTypes.string\n    }\n\n    componentDidMount = () => {\n        this.init();\n    }\n\n    init = () => {\n        this.initSelectUI();\n    }\n\n    initSelectUI = function () {\n        const { user_token } = this.props;\n        let that = this;\n\n        if (!window.$) {\n            return;\n        }\n\n        // loading remote data\n        function formatRepo(repo) {\n            if (repo.loading) return repo.text;\n            var markup = \"<div class='select2-result-repository clearfix'>\" +\n                \"<div class='select2-result-repository__meta'>\" +\n                \"<div class='select2-result-repository__title'>\" + repo.name + \"</div>\";\n            return markup;\n        }\n\n        function formatRepoSelection(repo) {\n            that.onChangeSubCategoryFormText(SUB_CATEGORY_FORM_CATEGORY_ID, repo._id);\n            return repo.name || repo.text;\n        }\n\n        window.$(\"#kt_select2_category_list\").select2({\n            placeholder: \"Search for category\",\n            allowClear: true,\n            ajax: {\n                url: getCategoriesWithSearch(),\n                delay: 250,\n                headers: {\n                    \"Authorization\": getAuthoriztionToken()\n                },\n                data: function (params) {\n\n                    return {\n                        search: params.term ? params.term : '', // search term\n                        page: params.page ? params.page : 1,\n                        page_size: 10,\n                        user_token\n                    };\n                },\n                processResults: function (data, params) {\n                    params.page = params.page || 1;\n\n                    return {\n                        results: data && data.data && data.data.items && data.data.items.length ? data.data.items.map(ele => {\n                            if (ele._id) {\n                                ele.id = ele._id;\n                            }\n\n                            return ele;\n                        }) : [],\n                        pagination: {\n                            more: data && data.data && data.data.hasMore ? data.data.hasMore : false\n                        }\n                    };\n                },\n                cache: true\n            },\n            escapeMarkup: function (markup) {\n                return markup;\n            }, // let our custom formatter work\n            minimumInputLength: 1,\n            templateResult: formatRepo, // omitted for brevity, see the source of this page\n            templateSelection: formatRepoSelection // omitted for brevity, see the source of this page\n        });\n\n        // custom styles\n    }\n\n    onChangeSubCategoryFormText = (key, value) => {\n        const { updateSubCategoryFormData } = this.props;\n\n        updateSubCategoryFormData({\n            [key]: value\n        });\n    }\n\n    resetCategorySelect = () => {\n        window.$(\"#kt_select2_category_list\").val(null).trigger(\"change\");\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const { subCategoryReqeustStatus } = this.props;\n\n        const prevSubCategoryReqeustStatus = prevProps && prevProps.subCategoryReqeustStatus ? prevProps.subCategoryReqeustStatus : {};\n        if (subCategoryReqeustStatus[STATUS] !== prevSubCategoryReqeustStatus[STATUS]) {\n            switch (subCategoryReqeustStatus[STATUS]) {\n                case SUCCESS:\n                    this.resetCategorySelect();\n                    break;\n            }\n        }\n    }\n\n    render() {\n        const { error_label } = this.props;\n\n        return (\n            <div class=\"form-group row\" >\n                <label class=\"col-form-label col-lg-3 col-sm-12\">Remote Data</label>\n                <div class=\" col-lg-9 col-md-9 col-sm-12\" id=\"kt_select2_category_list_container\">\n                    <select className=\"form-control kt-select2\" id=\"kt_select2_category_list\" name=\"param\">\n                        <option></option>\n                    </select>\n                    {error_label}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapToProps = ({ user, category }) => {\n    const user_data = user && user[USER_KEY] ? user[USER_KEY] : undefined;\n    const user_token = user_data && user_data[USER_DATA] && user_data[USER_DATA].user_token ? user_data[USER_DATA].user_token : false;\n\n    const category_data = category && category[CATEGORY_KEY] ? category[CATEGORY_KEY] : undefined;\n    const subCategoryReqeustStatus = category_data && category_data[SUB_CATEGORY_REQUEST_STATUS] ? category_data[SUB_CATEGORY_REQUEST_STATUS] : {};\n\n    return ({\n        user_token,\n        subCategoryReqeustStatus\n    });\n}\n\nexport default connect(mapToProps, {\n    updateSubCategoryFormData\n})(SelectCategory);","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ActionButton extends PureComponent {\n    static propTypes = {\n\n    }\n\n    loading() {\n        return `<div class=\"kt-spinner kt-spinner--sm kt-spinner--success\"></div>`;\n    }\n\n    render() {\n        return `\n        <a href=\"#\" class=\"btn btn-sm btn-clean btn-icon btn-icon-md\" title=\"View\">\n          <i class=\"fa fa-lock\"></i>\n        </a>`\n    }\n}\n","import Table from './Table'\nimport SelectCategory from './SelectCategory'\nimport ActionButton from './ActionButton'\n\nexport {\n    Table,\n    SelectCategory,\n    ActionButton\n}"],"sourceRoot":""}