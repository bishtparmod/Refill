{"version":3,"sources":["redux/change_password/Action.js","pages/dashboard/settings/ChangePassword.js"],"names":["updateUIConstraints","obj","dispatch","getState","formData","CHANGE_PASSWORD_ROOT","CHANGE_PASSWORD_KEY","data","Object","assign","updateChangePasswordState","error","Utils","log","type","CHANGE_PASSWORD_UPDATE","payload","ChangePassword","componentDidMount","init","updateSystemData","props","SYSTEM_DATA_PAGE_TITLE","submit","e","preventDefault","old_password","password","confirm_password","loading","changePassword","requestBody","Helper","validate","keys","then","status","response","CHANGE_PASSWORD_ERRORS","length","catch","err","console","isError","key","errors","findIndex","ele","fieldName","message","onChangeText","value","updateFormData","componentDidUpdate","prevProps","reqeustStatus","prevReqeustStatus","navigation","STATUS","SUCCESS","ToastsStore","success","ERROR","MESSAGE","SERVER_NO_VALUE","TOKEN_NOT_FOUND","_handleErrorMessage","className","this","id","store","lightBackground","position","ToastsContainerPosition","TOP_RIGHT","href","onSubmit","bind","role","data-dismiss","aria-label","aria-hidden","name","onChange","CHANGE_PASSWORD_FORM_OLD_PASSWORD","target","placeholder","CHANGE_PASSWORD_FORM_PASSWORD","CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD","PureComponent","connect","change_password","change_password_data","undefined","CHANGE_PASSWORD_FORM","CHANGE_PASSWORD_REQEUST_LOADING","CHANGE_PASSWORD_REQUEST_STATUS","USER_ROOT","USER_KEY","user_token","USER_DATA","EMPTY","body","refillChangePassword","res","a"],"mappings":"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","file":"static/js/13.a480786d.chunk.js","sourcesContent":["import { refillChangePassword } from '../../apis/APIs'\nimport Utils from '../../components/util/Utils';\nimport { CHANGE_PASSWORD_KEY, CHANGE_PASSWORD_ROOT, CHANGE_PASSWORD_FORM, CHANGE_PASSWORD_UPDATE, USER_ROOT, USER_KEY, USER_DATA, TOKEN_NOT_FOUND, CHANGE_PASSWORD_REQUEST_STATUS, STATUS, EMPTY, MESSAGE, CHANGE_PASSWORD_REQEUST_LOADING, CHANGE_PASSWORD_FORM_OLD_PASSWORD, CHANGE_PASSWORD_FORM_PASSWORD, CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD, SUCCESS, ERROR } from '../Types';\nimport { RefillStorage } from '../../apis';\n\n/** Change Password */\nexport const changePassword = () => {\n    return (dispatch, getState) => {\n        try {\n            //Form Data\n            const change_password_data = getState()[CHANGE_PASSWORD_ROOT][CHANGE_PASSWORD_KEY];\n            const formData = change_password_data[CHANGE_PASSWORD_FORM];\n\n            //User data\n            const data = getState()[USER_ROOT][USER_KEY];\n            const user_token = data && data[USER_DATA] && data[USER_DATA].user_token ? data[USER_DATA].user_token : undefined;\n\n            if (!user_token) {\n                dispatch(updateUIConstraints({\n                    [CHANGE_PASSWORD_REQUEST_STATUS]: {\n                        [STATUS]: EMPTY,\n                        [MESSAGE]: {\n                            message: TOKEN_NOT_FOUND\n                        }\n                    },\n                    [CHANGE_PASSWORD_REQEUST_LOADING]: false\n                }));\n                return;\n            }\n\n            //Intialize the request status and loading\n            dispatch(updateUIConstraints({\n                [CHANGE_PASSWORD_REQUEST_STATUS]: {\n                    [STATUS]: EMPTY,\n                    [MESSAGE]: \"\"\n                },\n                [CHANGE_PASSWORD_REQEUST_LOADING]: true\n            }));\n\n            const body = {\n                \"user_token\": user_token,\n                \"old_password\": formData[CHANGE_PASSWORD_FORM_OLD_PASSWORD],\n                \"password\": formData[CHANGE_PASSWORD_FORM_PASSWORD],\n                \"confirm_password\": formData[CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD]\n            }\n\n            console.log(\"body ===> user_token\", body);\n\n            refillChangePassword(body).then(async (res) => {\n                Utils.log(\"Refill Change Password Response ===> \", res);\n\n                if (res && res.status === 200) {\n                    dispatch(updateUIConstraints({\n                        [CHANGE_PASSWORD_REQUEST_STATUS]: {\n                            [STATUS]: SUCCESS,\n                            [MESSAGE]: res\n                        },\n                        [CHANGE_PASSWORD_REQEUST_LOADING]: false\n                    }));\n                } else {\n                    dispatch(updateUIConstraints({\n                        [CHANGE_PASSWORD_REQUEST_STATUS]: {\n                            [STATUS]: ERROR,\n                            [MESSAGE]: res\n                        },\n                        [CHANGE_PASSWORD_REQEUST_LOADING]: false\n                    }));\n                }\n            }).catch(error => {\n                Utils.log(\"Refill Change Password ===> error\", error);\n                dispatch(updateUIConstraints({\n                    [CHANGE_PASSWORD_REQUEST_STATUS]: {\n                        [STATUS]: ERROR,\n                        [MESSAGE]: \"\"\n                    },\n                    [CHANGE_PASSWORD_REQEUST_LOADING]: false\n                }));\n            });\n        } catch (error) {\n            Utils.log(\"Refill Change Password ===> error\", error);\n            dispatch(updateUIConstraints({\n                [CHANGE_PASSWORD_REQUEST_STATUS]: {\n                    [STATUS]: ERROR,\n                    [MESSAGE]: \"\"\n                },\n                [CHANGE_PASSWORD_REQEUST_LOADING]: false\n            }));\n        }\n    }\n}\n\n/** Manage Form Data */\nexport const updateFormData = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            const formData = getState()[CHANGE_PASSWORD_ROOT][CHANGE_PASSWORD_KEY];\n            const data = Object.assign(formData[CHANGE_PASSWORD_FORM], obj);\n\n            dispatch(updateChangePasswordState(Object.assign(formData, {\n                [CHANGE_PASSWORD_FORM]: data\n            })));\n        } catch (error) {\n            Utils.log(\"Update Form Data ===> error \", error);\n        }\n    }\n}\n\n/** Manage UI Constraints */\nexport const updateUIConstraints = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            const formData = getState()[CHANGE_PASSWORD_ROOT][CHANGE_PASSWORD_KEY];\n            const data = Object.assign(formData, obj);\n\n            dispatch(updateChangePasswordState(data));\n        } catch (error) {\n            Utils.log(\"Update UI Constraints ===> error \", error);\n        }\n    }\n}\n\n/** Update change password data state */\nconst updateChangePasswordState = (obj) => {\n    return (dispatch, getState) => {\n        try {\n            const formData = getState()[CHANGE_PASSWORD_ROOT][CHANGE_PASSWORD_KEY];\n\n            dispatch({\n                type: CHANGE_PASSWORD_UPDATE,\n                payload: Object.assign(formData, obj)\n            })\n        } catch (error) {\n            Utils.log(\"Update Login State ===> error \", error);\n        }\n    }\n}","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { updateFormData, updateUIConstraints, changePassword } from '../../../redux/change_password/Action';\nimport { Helper } from '../../../apis'\nimport Utils from '../../../components/util/Utils';\nimport { CHANGE_PASSWORD_KEY, CHANGE_PASSWORD_FORM, CHANGE_PASSWORD_FORM_PASSWORD, CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD, CHANGE_PASSWORD_ERRORS, CHANGE_PASSWORD_REQEUST_LOADING, CHANGE_PASSWORD_REQUEST_STATUS, CHANGE_PASSWORD_FORM_OLD_PASSWORD, STATUS, SUCCESS, ERROR, MESSAGE, SERVER_NO_VALUE, TOKEN_NOT_FOUND, SYSTEM_DATA_PAGE_TITLE } from '../../../redux/Types';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { updateSystemData } from '../../../redux/system/Action';\n\nclass ChangePassword extends PureComponent {\n    static propTypes = {\n\n    }\n\n    componentDidMount = () => {\n        this.init();\n    }\n\n    init = () => {\n        const { updateSystemData } = this.props;\n\n        updateSystemData({\n            [SYSTEM_DATA_PAGE_TITLE]: \"Refill | Change Password\"\n        });\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n\n        const { old_password, password, confirm_password, updateUIConstraints, loading, changePassword } = this.props;\n        if (loading) return;\n\n        const requestBody = {\n            old_password,\n            password,\n            confirm_password\n        };\n\n        Helper.validate(Object.keys(requestBody), requestBody)\n            .then(({ status, response }) => {\n                if (status) {\n                    updateUIConstraints({\n                        [CHANGE_PASSWORD_ERRORS]: []\n                    });\n\n                    changePassword();\n                } else updateUIConstraints({\n                    [CHANGE_PASSWORD_ERRORS]: response && response.length ? response : []\n                });\n            }).catch(err => console.log(err));\n    }\n\n    /** On error */\n    isError = (key) => {\n        const { errors } = this.props;\n\n        if (errors && errors.length) {\n            return errors.findIndex(ele => (ele.fieldName === key)) > -1 ? { status: true, message: errors[errors.findIndex(ele => (ele.fieldName === key))].message } : { status: false, message: \"\" };\n        } else return { status: false, message: \"\" }\n    }\n\n    onChangeText = (key, value) => {\n        const { updateFormData } = this.props;\n\n        updateFormData({\n            [key]: value\n        });\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const { reqeustStatus, loading, navigation } = this.props;\n\n        const prevReqeustStatus = prevProps && prevProps.reqeustStatus ? prevProps.reqeustStatus : {};\n        if (reqeustStatus[STATUS] !== prevReqeustStatus[STATUS]) {\n            switch (reqeustStatus[STATUS]) {\n                case SUCCESS:\n                    ToastsStore.success(\"Password successfully changed.\");\n                    break;\n                case ERROR:\n                    const message = reqeustStatus[MESSAGE] && reqeustStatus[MESSAGE].message ? reqeustStatus[MESSAGE].message : null;\n\n                    switch (message) {\n                        case SERVER_NO_VALUE:\n                            ToastsStore.error(\"No Record Found.\");\n                            break;\n                        case TOKEN_NOT_FOUND:\n                            ToastsStore.error(\"User token is not available.\");\n                            break;\n                    }\n\n                    break;\n            }\n        }\n    }\n\n    _handleErrorMessage = (key) => {\n        const data = this.isError(key);\n\n        if (data && data.status) return <span className=\"form-text text-right text-error\">{data.message}</span>;\n\n        return <div />\n    }\n\n    render() {\n        const { loading } = this.props;\n\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <ToastsContainer store={ToastsStore} lightBackground position={ToastsContainerPosition.TOP_RIGHT} />\n\n                {/* <!-- begin:: Subheader --> */}\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Profile </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"></span>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"></i></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"></span>\n                                <a href=\"\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Change Password </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* <!-- end:: Subheader --> */}\n\n                {/* <!-- begin:: Content --> */}\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n\n                    {/* <!--begin::Portlet--> */}\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n\n                            {/* <!--begin::Portlet--> */}\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Change Password\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n                                    </div>\n                                </div>\n\n                                {/* <!--begin::Form--> */}\n                                <form className=\"kt-form kt-form--label-right\" id=\"kt_form_1\" onSubmit={this.submit.bind(this)}>\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"form-group form-group-last kt-hide\">\n                                            <div className=\"alert alert-danger\" role=\"alert\" id=\"kt_form_1_msg\">\n                                                <div className=\"alert-icon\"><i className=\"flaticon-warning\"></i></div>\n                                                <div className=\"alert-text\">\n                                                    Oh snap! Change a few things up and try submitting again.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n                                                <div className=\"alert-close\">\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\"><i className=\"la la-close\"></i></span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <label className=\"col-form-label col-lg-3 col-sm-12\">Old Password *</label>\n                                            <div className=\"col-lg-9 col-md-9 col-sm-12\">\n                                                <input type=\"password\" className=\"form-control\" name=\"old_password\" onChange={(e) => this.onChangeText(CHANGE_PASSWORD_FORM_OLD_PASSWORD, e.target.value)} placeholder=\"Enter old password\" />\n                                                {/* display error */}\n                                                {this._handleErrorMessage(\"old_password\")}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <label className=\"col-form-label col-lg-3 col-sm-12\">New Password *</label>\n                                            <div className=\"col-lg-9 col-md-9 col-sm-12\">\n                                                <input type=\"password\" className=\"form-control\" name=\"password\" onChange={(e) => this.onChangeText(CHANGE_PASSWORD_FORM_PASSWORD, e.target.value)} placeholder=\"Enter new password\" />\n                                                {/* display error */}\n                                                {this._handleErrorMessage(\"password\")}\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group row\">\n                                            <label className=\"col-form-label col-lg-3 col-sm-12\">Confirm Password *</label>\n                                            <div className=\"col-lg-9 col-md-9 col-sm-12\">\n                                                <input type=\"password\" className=\"form-control\" name=\"confirm_password\" onChange={(e) => this.onChangeText(CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD, e.target.value)} placeholder=\"Enter confirm password\" />\n                                                {/* display error */}\n                                                {this._handleErrorMessage(\"confirm_password\")}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"kt-portlet__foot\">\n                                        <div className=\"kt-form__actions\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-9 ml-lg-auto\">\n                                                    <button type=\"submit\" className=\"btn btn-brand\">{loading ? \"Loading...\" : \"Submit\"}</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n\n                                {/* <!--end::Form--> */}\n                            </div>\n\n                            {/* <!--end::Portlet--> */}\n                        </div>\n\n                    </div>\n                </div>\n\n                {/* <!-- end:: Content --> */}\n            </div>\n        )\n    }\n}\n\n\nconst mapToProps = ({ change_password }) => {\n    const change_password_data = change_password && change_password[CHANGE_PASSWORD_KEY] ? change_password[CHANGE_PASSWORD_KEY] : undefined;\n    const formData = change_password_data && change_password_data[CHANGE_PASSWORD_FORM] ? change_password_data[CHANGE_PASSWORD_FORM] : undefined;\n    const old_password = formData && formData[CHANGE_PASSWORD_FORM_OLD_PASSWORD] ? formData[CHANGE_PASSWORD_FORM_OLD_PASSWORD] : undefined;\n    const password = formData && formData[CHANGE_PASSWORD_FORM_PASSWORD] ? formData[CHANGE_PASSWORD_FORM_PASSWORD] : undefined;\n    const confirm_password = formData && formData[CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD] ? formData[CHANGE_PASSWORD_FORM_CONFIRM_PASSWORD] : undefined;\n    const errors = change_password_data && change_password_data[CHANGE_PASSWORD_ERRORS] ? change_password_data[CHANGE_PASSWORD_ERRORS] : [];\n    const loading = change_password_data && change_password_data[CHANGE_PASSWORD_REQEUST_LOADING] ? change_password_data[CHANGE_PASSWORD_REQEUST_LOADING] : false;\n    const reqeustStatus = change_password_data && change_password_data[CHANGE_PASSWORD_REQUEST_STATUS] ? change_password_data[CHANGE_PASSWORD_REQUEST_STATUS] : {};\n\n    return ({\n        old_password,\n        confirm_password,\n        password,\n        errors,\n        loading,\n        reqeustStatus\n    });\n}\n\nexport default connect(mapToProps, {\n    updateFormData,\n    updateUIConstraints,\n    changePassword,\n    updateSystemData\n})(ChangePassword);"],"sourceRoot":""}