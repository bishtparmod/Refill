{"version":3,"sources":["pages/dashboard/category/Add.js"],"names":["AddProduct","componentDidMount","init","updateSystemData","props","SYSTEM_DATA_PAGE_TITLE","submit","e","preventDefault","category_name","updateCategoryUIConstraints","category_loading","createCategory","requestBody","Helper","validate","Object","keys","then","status","response","CATEGORY_ERRORS","length","catch","err","console","log","subCategorySubmit","sub_category_name","sub_category_id","sub_category_loading","createSubCategory","SUB_CATEGORY_ERRORS","isError","key","errors","category_errors","findIndex","ele","fieldName","message","isSubCategoryError","sub_category_errors","onChangeText","value","updateCategoryFormData","onChangeSubCategoryFormText","updateSubCategoryFormData","componentDidUpdate","prevProps","categoryReqeustStatus","subCategoryReqeustStatus","prevReqeustStatus","STATUS","SUCCESS","ToastsStore","success","resetData","ERROR","MESSAGE","SERVER_NO_VALUE","error","SERVER_PRESENT","TOKEN_NOT_FOUND","prevSubCategoryReqeustStatus","_handleErrorMessage","data","className","_handleSubCategoryErrorMessage","componentWillUnmount","resetCategoryDataState","this","id","href","role","data-toggle","onSubmit","bind","type","placeholder","onChange","CATEGORY_FORM_NAME","target","error_label","SUB_CATEGORY_FORM_NAME","PureComponent","connect","category","category_data","CATEGORY_KEY","undefined","categoryFormData","CATEGORY_FORM","subCategoryFormData","SUB_CATEGORY_FORM","SUB_CATEGORY_FORM_CATEGORY_ID","CATEGORY_REQEUST_LOADING","SUB_CATEGORY_REQEUST_LOADING","CATEGORY_REQUEST_STATUS","SUB_CATEGORY_REQUEST_STATUS"],"mappings":"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","file":"static/js/11.eff63ed2.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { CATEGORY_KEY, CATEGORY_FORM, CATEGORY_FORM_NAME, SUB_CATEGORY_FORM, SUB_CATEGORY_FORM_NAME, SUB_CATEGORY_FORM_CATEGORY_ID, CATEGORY_ERRORS, SUB_CATEGORY_ERRORS, CATEGORY_REQEUST_LOADING, SUB_CATEGORY_REQEUST_LOADING, CATEGORY_REQUEST_STATUS, SUB_CATEGORY_REQUEST_STATUS, STATUS, SERVER_NO_VALUE, TOKEN_NOT_FOUND, ERROR, SUCCESS, SYSTEM_DATA_PAGE_TITLE, MESSAGE, SERVER_PRESENT } from '../../../redux/Types'\nimport { updateCategoryFormData, updateCategoryUIConstraints, createCategory, resetCategoryDataState, updateSubCategoryFormData, createSubCategory } from '../../../redux/category/Action'\nimport { updateSystemData } from '../../../redux/system/Action'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { Helper } from '../../../apis'\nimport { SelectCategory } from '../../../components/dashboard/category/index.js'\n\nclass AddProduct extends PureComponent {\n    static propTypes = {\n\n    }\n\n    componentDidMount = () => {\n        this.init();\n    }\n\n    init = () => {\n        const { updateSystemData } = this.props;\n\n        updateSystemData({\n            [SYSTEM_DATA_PAGE_TITLE]: \"Refill | Add Category\"\n        });\n    }\n\n    /**\n     * Category Submit\n     */\n    submit = (e) => {\n        e.preventDefault();\n\n        const { category_name, updateCategoryUIConstraints, category_loading, createCategory } = this.props;\n        if (category_loading) return;\n\n        const requestBody = {\n            category_name\n        };\n\n        Helper.validate(Object.keys(requestBody), requestBody)\n            .then(({ status, response }) => {\n                if (status) {\n                    updateCategoryUIConstraints({\n                        [CATEGORY_ERRORS]: []\n                    });\n\n                    createCategory();\n                } else updateCategoryUIConstraints({\n                    [CATEGORY_ERRORS]: response && response.length ? response : []\n                });\n            }).catch(err => console.log(err));\n    }\n\n    /**\n     * Sub Category Submit\n     */\n    subCategorySubmit = (e) => {\n        e.preventDefault();\n\n        const { sub_category_name, sub_category_id, updateCategoryUIConstraints, sub_category_loading, createSubCategory } = this.props;\n        if (sub_category_loading) return;\n\n        const requestBody = {\n            sub_category_name,\n            sub_category_id\n        };\n\n        Helper.validate(Object.keys(requestBody), requestBody)\n            .then(({ status, response }) => {\n                if (status) {\n                    updateCategoryUIConstraints({\n                        [SUB_CATEGORY_ERRORS]: []\n                    });\n\n                    createSubCategory();\n                } else updateCategoryUIConstraints({\n                    [SUB_CATEGORY_ERRORS]: response && response.length ? response : []\n                });\n            }).catch(err => console.log(err));\n    }\n\n    /** On error */\n    isError = (key) => {\n        const { category_errors: errors } = this.props;\n\n        if (errors && errors.length) {\n            return errors.findIndex(ele => (ele.fieldName === key)) > -1 ? { status: true, message: errors[errors.findIndex(ele => (ele.fieldName === key))].message } : { status: false, message: \"\" };\n        } else return { status: false, message: \"\" }\n    }\n\n    /** On Sub Category error */\n    isSubCategoryError = (key) => {\n        const { sub_category_errors: errors } = this.props;\n\n        if (errors && errors.length) {\n            return errors.findIndex(ele => (ele.fieldName === key)) > -1 ? { status: true, message: errors[errors.findIndex(ele => (ele.fieldName === key))].message } : { status: false, message: \"\" };\n        } else return { status: false, message: \"\" }\n    }\n\n    onChangeText = (key, value) => {\n        const { updateCategoryFormData } = this.props;\n\n        updateCategoryFormData({\n            [key]: value\n        });\n    }\n\n    onChangeSubCategoryFormText = (key, value) => {\n        const { updateSubCategoryFormData } = this.props;\n\n        updateSubCategoryFormData({\n            [key]: value\n        });\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const { categoryReqeustStatus, subCategoryReqeustStatus } = this.props;\n\n        const prevReqeustStatus = prevProps && prevProps.categoryReqeustStatus ? prevProps.categoryReqeustStatus : {};\n        if (categoryReqeustStatus[STATUS] !== prevReqeustStatus[STATUS]) {\n            switch (categoryReqeustStatus[STATUS]) {\n                case SUCCESS:\n                    ToastsStore.success(\"Category has been created successfully.\");\n                    this.resetData();\n                    break;\n                case ERROR:\n                    const message = categoryReqeustStatus[MESSAGE] && categoryReqeustStatus[MESSAGE].message ? categoryReqeustStatus[MESSAGE].message : null;\n\n                    switch (message) {\n                        case SERVER_NO_VALUE:\n                            ToastsStore.error(\"No Record Found.\");\n                            break;\n                        case SERVER_PRESENT:\n                            ToastsStore.error(\"Category is already present.\");\n                            break;\n                        case TOKEN_NOT_FOUND:\n                            ToastsStore.error(\"User token is not available.\");\n                            break;\n                        default:\n                            ToastsStore.error(\"Please try again\");\n                    }\n\n                    break;\n            }\n        }\n\n        const prevSubCategoryReqeustStatus = prevProps && prevProps.subCategoryReqeustStatus ? prevProps.subCategoryReqeustStatus : {};\n        if (subCategoryReqeustStatus[STATUS] !== prevSubCategoryReqeustStatus[STATUS]) {\n            switch (subCategoryReqeustStatus[STATUS]) {\n                case SUCCESS:\n                    ToastsStore.success(\"Sub Category has been created successfully.\");\n                    this.resetData();\n                    break;\n                case ERROR:\n                    const message = subCategoryReqeustStatus[MESSAGE] && subCategoryReqeustStatus[MESSAGE].message ? subCategoryReqeustStatus[MESSAGE].message : null;\n\n                    switch (message) {\n                        case SERVER_NO_VALUE:\n                            ToastsStore.error(\"No Record Found.\");\n                            break;\n                        case SERVER_PRESENT:\n                            ToastsStore.error(\"Sub Category is already present.\");\n                            break;\n                        case TOKEN_NOT_FOUND:\n                            ToastsStore.error(\"User token is not available.\");\n                            break;\n                        default:\n                            ToastsStore.error(\"Please try again\");\n                    }\n\n                    break;\n            }\n        }\n    }\n\n    _handleErrorMessage = (key) => {\n        const data = this.isError(key);\n\n        if (data && data.status) return <span className=\"form-text text-right text-error\">{data.message}</span>;\n\n        return <div />\n    }\n\n    /**\n     * Handle Sub Category Error\n     */\n    _handleSubCategoryErrorMessage = (key) => {\n        const data = this.isSubCategoryError(key);\n\n        if (data && data.status) return <span className=\"form-text text-right text-error\">{data.message}</span>;\n\n        return <div />\n    }\n\n    componentWillUnmount = () => {\n        this.resetData();\n    }\n\n    resetData = () => {\n        const { resetCategoryDataState } = this.props;\n\n        resetCategoryDataState();\n    }\n\n    render() {\n        const { category_loading, sub_category_loading, category_name, sub_category_name } = this.props;\n\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n\n                {/* <!-- begin:: Subheader --> */}\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Category </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"></span>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"></i></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"></span>\n                                <a href=\"\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Add </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* <!-- end:: Subheader --> */}\n\n                {/* <!-- begin:: Content --> */}\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n\n                    {/* <!--Begin:: Portlet--> */}\n                    <div className=\"kt-portlet kt-portlet--tabs\">\n                        <div className=\"kt-portlet__head\">\n                            <div className=\"kt-portlet__head-toolbar\">\n                                <ul className=\"nav nav-tabs nav-tabs-space-lg nav-tabs-line nav-tabs-bold nav-tabs-line-3x nav-tabs-line-brand\" role=\"tablist\">\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#kt_apps_contacts_view_tab_2\" role=\"tab\">\n                                            Add Category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a className=\"nav-link \" data-toggle=\"tab\" href=\"#kt_apps_contacts_view_tab_3\" role=\"tab\">\n                                            Add Sub-Category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"kt-portlet__body\">\n                            <div className=\"tab-content  kt-margin-t-20\">\n\n                                {/* <!--Begin:: Tab Content--> */}\n                                <div className=\"tab-pane active\" id=\"kt_apps_contacts_view_tab_2\" role=\"tabpanel\">\n                                    <form className=\"kt-form kt-form--label-right\" onSubmit={this.submit.bind(this)}>\n                                        <div className=\"kt-form__body\">\n                                            <div className=\"kt-section kt-section--first\">\n                                                <div className=\"kt-section__body\">\n                                                    <div className=\"row\">\n                                                        <label className=\"col-xl-3\"></label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            <h3 className=\"kt-section__title kt-section__title-sm\">Category Info:</h3>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\">Name</label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            <input className=\"form-control\" type=\"text\" placeholder=\"Enter category name\" value={category_name} onChange={(e) => this.onChangeText(CATEGORY_FORM_NAME, e.target.value)} />\n                                                            {/* display error */}\n                                                            {this._handleErrorMessage(\"category_name\")}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-separator kt-separator--space-lg kt-separator--fit kt-separator--border-solid\"></div>\n                                        <div className=\"kt-form__actions\">\n                                            <div className=\"row\">\n                                                <div className=\"col-xl-3\"></div>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <button className=\"btn btn-brand btn-bold\">{category_loading ? \"Loading...\" : \"Submit\"}</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                {/* <!--End:: Tab Content--> */}\n\n                                {/* <!--Begin:: Tab Content--> */}\n                                <div className=\"tab-pane\" id=\"kt_apps_contacts_view_tab_3\" role=\"tabpanel\">\n                                    <form className=\"kt-form kt-form--label-right\" onSubmit={this.subCategorySubmit.bind(this)}>\n                                        <div className=\"kt-form__body\">\n                                            <div className=\"kt-section\">\n                                                <div className=\"kt-section__body\">\n                                                    <div className=\"row\">\n                                                        <label className=\"col-xl-3\"></label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            <h3 className=\"kt-section__title kt-section__title-sm\">Sub-Category Info:</h3>\n                                                        </div>\n                                                    </div>\n                                                    <SelectCategory\n                                                        error_label={this._handleSubCategoryErrorMessage(\"sub_category_id\")}\n                                                    />\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\">Name</label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            <input className=\"form-control\" type=\"text\" placeholder=\"Enter sub-category name\" value={sub_category_name} onChange={(e) => this.onChangeSubCategoryFormText(SUB_CATEGORY_FORM_NAME, e.target.value)} />\n                                                            {/* display error */}\n                                                            {this._handleSubCategoryErrorMessage(\"sub_category_name\")}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-separator kt-separator--space-lg kt-separator--fit kt-separator--border-solid\"></div>\n                                        <div className=\"kt-form__actions\">\n                                            <div className=\"row\">\n                                                <div className=\"col-xl-3\"></div>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <button type=\"submit\" className=\"btn btn-brand btn-bold\">{sub_category_loading ? \"Loading...\" : \"Submit\"}</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                {/* <!--End:: Tab Content--> */}\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* <!--End:: Portlet--> */}\n                </div>\n\n                {/* <!-- end:: Content --> */}\n            </div>\n        )\n    }\n}\n\n\nconst mapToProps = ({ category }) => {\n    const category_data = category && category[CATEGORY_KEY] ? category[CATEGORY_KEY] : undefined;\n    const categoryFormData = category_data && category_data[CATEGORY_FORM] ? category_data[CATEGORY_FORM] : undefined;\n    const subCategoryFormData = category_data && category_data[SUB_CATEGORY_FORM] ? category_data[SUB_CATEGORY_FORM] : undefined;\n    const category_name = categoryFormData && categoryFormData[CATEGORY_FORM_NAME] ? categoryFormData[CATEGORY_FORM_NAME] : \"\";\n    const sub_category_name = subCategoryFormData && subCategoryFormData[SUB_CATEGORY_FORM_NAME] ? subCategoryFormData[SUB_CATEGORY_FORM_NAME] : \"\";\n    const sub_category_id = subCategoryFormData && subCategoryFormData[SUB_CATEGORY_FORM_CATEGORY_ID] ? subCategoryFormData[SUB_CATEGORY_FORM_CATEGORY_ID] : \"\";\n    const category_errors = category_data && category_data[CATEGORY_ERRORS] ? category_data[CATEGORY_ERRORS] : [];\n    const sub_category_errors = category_data && category_data[SUB_CATEGORY_ERRORS] ? category_data[SUB_CATEGORY_ERRORS] : [];\n    const category_loading = category_data && category_data[CATEGORY_REQEUST_LOADING] ? category_data[CATEGORY_REQEUST_LOADING] : false;\n    const sub_category_loading = category_data && category_data[SUB_CATEGORY_REQEUST_LOADING] ? category_data[SUB_CATEGORY_REQEUST_LOADING] : false;\n    const categoryReqeustStatus = category_data && category_data[CATEGORY_REQUEST_STATUS] ? category_data[CATEGORY_REQUEST_STATUS] : {};\n    const subCategoryReqeustStatus = category_data && category_data[SUB_CATEGORY_REQUEST_STATUS] ? category_data[SUB_CATEGORY_REQUEST_STATUS] : {};\n\n    console.log(\"sub category ===> \", sub_category_loading);\n\n    return ({\n        category_name,\n        sub_category_name,\n        sub_category_id,\n        category_errors,\n        sub_category_errors,\n        category_loading,\n        sub_category_loading,\n        categoryReqeustStatus,\n        subCategoryReqeustStatus\n    });\n}\n\nexport default connect(mapToProps, {\n    updateCategoryFormData,\n    updateCategoryUIConstraints,\n    updateSystemData,\n    createCategory,\n    resetCategoryDataState,\n    updateSubCategoryFormData,\n    createSubCategory\n})(AddProduct);"],"sourceRoot":""}